import React from 'react';
import {
  Container,
  FormGroup,
  Input,
  Label,
  Button,
  UncontrolledAlert,
} from 'reactstrap';
import { Link } from 'react-router-dom';

/**
 * Component for generating a form generated by object predictions or by manually adding them using buttons in the AddRemove container.
 * Shows errors when unable to find predicted objects in the itemlist
 * @component
 * @param {props} props props passed from container
 */
const InputDetections = (props) => {
  const {
    handleChange,
    items,
    projects,
    index,
    handleRemove,
    defaultItem,
    score,
    name,
    value,
  } = props;

  return (
    <Container key={'detection ' + index}>
      {!defaultItem ? (
        <>
          <UncontrolledAlert color='danger'>
            {name
              ? 'Modellen fant vare med navn: {name}, men varen finnes ikke i systemet.'
              : 'Det finnes ingen varer i systemet'}
          </UncontrolledAlert>
          <Link to='/register/item'>
            <Button color='primary' size='sm'>
              Legg til vare
            </Button>
          </Link>
        </>
      ) : (
          <>
            {score && (
              <UncontrolledAlert color='success'>
                Modellen fant vare: {name} med konfidens: {score}
              </UncontrolledAlert>
            )}
          </>
        )}
      <FormGroup>
        <Label>Vare</Label>
        <Input
          type='select'
          name='item_id'
          required
          value={defaultItem}
          onChange={handleChange(index)}
        >
          {items &&
            items.map((items) => (
              <option key={'item' + items.item_id} value={items.item_id}>
                {items.name}
              </option>
            ))}
        </Input>
      </FormGroup>
      <FormGroup>
        <Label>Antall: </Label>
        <Input
          type='number'
          name='amount'
          value={value}
          onChange={handleChange(index)}
        />
      </FormGroup>
      {projects.length > 0 ? (
        <FormGroup>
          <Label>Prosjekt: </Label>
          <Input
            type='select'
            name='project'
            required
            placeholder='Velg prosjekt'
            onChange={handleChange(index)}
            min='1'
          >
            {projects &&
              projects.map((project) => (
                <option
                  key={'project' + projects.project_id}
                  value={project.project_id}
                >
                  {project.project_number} - {project.project_name}
                </option>
              ))}
          </Input>
        </FormGroup>
      ) : (
          <>
            <UncontrolledAlert color='danger'>
              Kunne ikke finne noen prosjekt
          </UncontrolledAlert>
            <Link to='/register/project'>
              <Button color='primary' size='sm'>
                Legg til prosjekt
            </Button>
            </Link>
          </>
        )}
      <FormGroup>
        <Button color='warning' onClick={handleRemove(index)} size='sm'>
          Fjern felt
        </Button>
      </FormGroup>
      <hr />
    </Container>
  );
};
export default InputDetections;
